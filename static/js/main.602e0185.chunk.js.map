{"version":3,"sources":["components/popup/payment.js","components/popup/choice.js","components/popup/close.svg","components/popup/popup.js","components/popup/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["Payment","inAYear","num","payments","value","paymentItems","maxPay","paymentAYear","Math","floor","push","items","remainder","i","paymentСalculation","map","item","String","replace","className","index","id","type","htmlFor","tabIndex","Choice","name","defaultChecked","Popup","showPopup","useState","valueSalary","setValueSalary","isSalay","setIsSalay","isError","setIsError","borderColor","setBorderColor","onClick","src","close","alt","inputMode","placeholder","autoComplete","error","onChange","evt","addRub","target","style","autoFocus","required","preventDefault","length","renderPayments","App","isOpen","setIsOpen","s","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.602e0185.chunk.js","sourcesContent":[" import React from 'react';\r\n\r\nconst Payment = ({value}) => {\r\n\r\n  function paymentСalculation(value) {\r\n    const paymentItems = [];\r\n    const maxPay = 260000;\r\n    const paymentAYear = Math.floor((value * 12) * 0.13);\r\n\r\n    if (paymentAYear >= maxPay) {\r\n      paymentItems.push(maxPay);\r\n    } else {\r\n      const items = Math.floor(maxPay / paymentAYear);\r\n      const remainder = maxPay % paymentAYear;\r\n      let i = 0;\r\n\r\n      while (i < items) {\r\n        paymentItems.push(paymentAYear);\r\n        i++;\r\n      };\r\n\r\n      paymentItems.push(remainder);\r\n    }\r\n\r\n    return paymentItems;\r\n  };\r\n\r\n  function inAYear(num) {\r\n    switch(true) {\r\n      case (num % 10 === 2 && num < 10):\r\n        return `во ${num}-ой год`;\r\n      case (num % 10 === 3 && (num < 10 || num > 20)):\r\n        return `в ${num}-ий год`;\r\n      case (num % 10 === 6 && (num < 10 || num > 20)):\r\n        return `в ${num}-ой год`;\r\n      case (num % 10 === 7 && (num < 10 || num > 20)):\r\n        return `в ${num}-ой год`;\r\n      case (num % 10 === 8 && (num < 10 || num > 20)):\r\n        return `в ${num}-ой год`;\r\n      case (num % 10 === 2 && num > 20):\r\n        return `в ${num}-ой год`;\r\n      default:\r\n        return `в ${num}-ый год`;\r\n    }\r\n  };\r\n\r\n  const payments = paymentСalculation(value).map((item) => {\r\n    return String(item)\r\n      .replace(/\\d{1,3}(?=(\\d{3})+(?!\\d))/g, '$& ');\r\n    }\r\n  );\r\n\r\n  return (\r\n    <fieldset className=\"popup-fieldset payment\">\r\n      <span className=\"payment-title\">Итого можете внести в&nbsp;качестве досрочных:</span>\r\n      <ul className=\"payment-list\">\r\n        {payments.map((item, index) => (\r\n          <li key={index} className=\"payment-item\">\r\n            <input\r\n              id={index}\r\n              type=\"checkbox\"\r\n              className=\"payment-checkbox visually-hidden\" />\r\n            <label\r\n              htmlFor={index}\r\n              className=\"payment-label\"\r\n              tabIndex={index + 1}>\r\n              <span>{item} рублей</span>\r\n              &nbsp;\r\n              <span className=\"payment-period\">\r\n                {inAYear(index + 1)}\r\n              </span>\r\n            </label>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import React from 'react';\r\n\r\nconst Choice = () => {\r\n  return (\r\n    <fieldset className=\"popup-fieldset choice\">\r\n      <span className=\"choice-title\">Что уменьшаем?</span>\r\n      <div className=\"choice-wrapper\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"choice-radio\"\r\n          className=\"choice-radio visually-hidden\"\r\n          id=\"payment\"\r\n          defaultChecked />\r\n        <label\r\n          className=\"choice-label\"\r\n          htmlFor=\"payment\"\r\n          tabIndex=\"6\">\r\n          Платёж\r\n        </label>\r\n\r\n        <input\r\n          type=\"radio\"\r\n          name=\"choice-radio\"\r\n          className=\"choice-radio visually-hidden\"\r\n          id=\"date\" />\r\n        <label\r\n          className=\"choice-label\"\r\n          htmlFor=\"date\"\r\n          tabIndex=\"7\">\r\n          Срок\r\n        </label>\r\n      </div>\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default Choice;\r\n","export default __webpack_public_path__ + \"static/media/close.075fa808.svg\";","import React, {useState} from 'react';\r\nimport Payment from './payment';\r\nimport Choice from './choice';\r\nimport close from './close.svg';\r\nimport './popup.css';\r\n\r\nfunction addSpace(value) {\r\n  return value\r\n            .replace(/\\s+|[^\\d]/g, '')\r\n            .replace(/(\\d{1,3})(?=((\\d{3})*)$)/g, ' $1')\r\n            .replace(/^\\s/g, '')\r\n};\r\n\r\nfunction addRub(value) {\r\n  if (!value) {\r\n    return value.replace(/ ₽/g, '');\r\n  }\r\n\r\n  return (value + ' ₽').replace(/[^\\d ₽]| ₽(?!$)/g, '');\r\n};\r\n\r\nfunction сleanAValue(value) {\r\n  return value.replace(/\\D/g, '');\r\n};\r\n\r\nconst Popup = ({showPopup}) => {\r\n  const [valueSalary, setValueSalary] = useState('');\r\n  const [isSalay, setIsSalay] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [borderColor, setBorderColor] = useState('#DFE3E6');\r\n\r\n  function сhangeSalary(evt) {\r\n    setValueSalary(addRub(addSpace(evt.target.value)));\r\n    setIsSalay(false);\r\n    setIsError(false);\r\n    setBorderColor('#DFE3E6');\r\n  };\r\n\r\n  function calculateSumPay(evt) {\r\n    evt.preventDefault();\r\n\r\n    (valueSalary.length >= 6) ? setIsSalay(true) : setIsSalay(false);\r\n\r\n    valueSalary ? setIsError(false) : setIsError(true);\r\n    valueSalary ? setBorderColor('#DFE3E6') : setBorderColor('#EA0029');\r\n  };\r\n\r\n  function submitForm(evt) {\r\n    evt.preventDefault();\r\n  };\r\n\r\n  function renderPayments() {\r\n    return <Payment value={сleanAValue(valueSalary)} />\r\n  };\r\n\r\n  function showError() {\r\n    return <p className=\"salary-error\">Поле обязательно для заполнения</p>\r\n  };\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <section className=\"popup\">\r\n        <div className=\"popup-header\">\r\n          <h2 className=\"popup-title\">Налоговый вычет</h2>\r\n          <button\r\n            className=\"btn btn-popup-close\"\r\n            onClick={showPopup}>\r\n            <img src={close} alt=\"close\" />\r\n          </button>\r\n        </div>\r\n\r\n        <p className=\"popup-description\">Используйте налоговый вычет чтобы погасить ипотеку досрочно. Размер налогового вычета составляет не&nbsp;более&nbsp;13% от своего официального годового дохода.</p>\r\n\r\n        <form className=\"popup-form\">\r\n          <fieldset className=\"popup-fieldset salary\">\r\n            <label\r\n              className=\"salary-label\"\r\n              htmlFor=\"salary\">\r\n              Ваша зарплата в месяц\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              inputMode=\"numeric\"\r\n              id=\"salary\"\r\n              className=\"salary-input\"\r\n              placeholder=\"Введите данные\"\r\n              autoComplete=\"off\"\r\n              error=\"\"\r\n              value={valueSalary}\r\n              onChange={сhangeSalary}\r\n              style={{borderColor: borderColor}}\r\n              autoFocus\r\n              required />\r\n            {isError ? showError() : null}\r\n            <button\r\n              className=\"btn btn-calculate-salary\"\r\n              onClick={calculateSumPay}>\r\n              Рассчитать\r\n            </button>\r\n          </fieldset>\r\n\r\n          {isSalay ? renderPayments() : null}\r\n          <Choice />\r\n\r\n          <button\r\n            className=\"btn btn-add\"\r\n            onClick={submitForm}\r\n            type=\"submit\">\r\n            Добавить\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import Popup from './popup';\r\n\r\nexport default Popup;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React, {useState} from 'react';\r\nimport Popup from '../popup';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function showPopup() {\r\n    setIsOpen((s) => !s)\r\n  }\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <button\r\n        className=\"btn btn-main\"\r\n        onClick={showPopup}>\r\n        Налоговый вычет\r\n      </button>\r\n      {isOpen ? <Popup showPopup={showPopup}/> : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}